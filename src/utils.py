import re
from typing import Union


def extract_number_gsm8k(text: str) -> Union[int, bool]:
    """Extracts a number from a given text using a specific pattern.

    This function searches for a number that follows the '####' pattern
    in the input text and returns it as an integer. If no match is found,
    it returns None.

    Args:
        text (str): The input text containing the number.

    Returns:
        Union[int, bool]: The extracted number as an integer if found, otherwise None.
    """
    match = re.search(r"####\s*(\d+)", str(text))
    return int(match.group(1)) if match else None


def remove_thinking_sections(response: str) -> str:
    """
    Removes the <think>...</think> sections from the model response.

    Args:
        response (str): The text generated by the model.

    Returns:
        str: The cleaned response without the <think>...</think> sections.
    """
    return re.sub(r"<think>.*?</think>", "", response, flags=re.DOTALL).strip()


def contains_thinking_sections(response: str) -> bool:
    """
    Checks if the given response contains <think>...</think> sections.

    Args:
        response (str): The text generated by the model.

    Returns:
        bool: True if <think>...</think> sections are found, otherwise False.
    """
    return bool(re.search(r"<think>.*?</think>", response, flags=re.DOTALL))
